import React from "react";
import "./MobileOrder.css";
import { Modal } from "react-bootstrap";
import { useNavigate } from "react-router-dom";

export default function MobileOrder({
  isMobile,
  setIsMobile,
  cartItems,
  handleIncrement,
  handleDecrement,
  getTotalPrice,
  handleAddToCart,
  selectedDate,
  cartEmpty,
}) {
  const navigate = useNavigate();

  const handleCloseModal = () => {
    setIsMobile(false);
  };


  return (
    <>
      <Modal
        size="md"
        aria-labelledby="contained-modal-title-vcenter"
        centered
        className="mobile-cart_modal"
        show={isMobile}
        onHide={handleCloseModal} 
      >
        <Modal.Header closeButton onClick={handleCloseModal}>
          <Modal.Title>Ticket</Modal.Title>
        </Modal.Header>
        <Modal.Body className="d-flex justify-content-center flex-column align-items-center ">
          <div className="mobile-table">
            <div className="header-date">
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M8 1C8.55229 1 9 1.44772 9 2V3H15V2C15 1.44772 15.4477 1 16 1C16.5523 1 17 1.44772 17 2V3.00003C17.4591 3.00031 17.8592 3.00313 18.1949 3.03057C18.5902 3.06289 18.9831 3.13424 19.3614 3.32698C19.9248 3.61405 20.3851 4.07224 20.6732 4.63781C20.8659 5.016 20.9372 5.40906 20.9695 5.80396C21 6.17815 21 6.6323 21 7.15839V16.8421C21 17.3682 21 17.8221 20.9695 18.1962C20.9372 18.591 20.8659 18.9838 20.6732 19.3619C20.3854 19.9269 19.9254 20.3859 19.3614 20.6732C18.9833 20.8659 18.5905 20.9372 18.1957 20.9695C17.8217 21 17.3677 21 16.8416 21H7.15839C6.6323 21 6.17815 21 5.80397 20.9695C5.40906 20.9372 5.016 20.8659 4.63781 20.6732C4.07276 20.3853 3.61431 19.9258 3.32698 19.3619C3.13421 18.9835 3.06288 18.5904 3.03057 18.1951C2.99997 17.8206 2.99998 17.3659 3 16.8388V7.16168C2.99998 6.6345 2.99997 6.17965 3.03057 5.80498C3.06286 5.40962 3.13416 5.01624 3.32698 4.63781C3.6146 4.07332 4.07332 3.6146 4.63781 3.32698C5.01625 3.13416 5.40962 3.06286 5.80499 3.03057C6.14079 3.00314 6.54102 3.00031 7 3.00003V2C7 1.44772 7.44772 1 8 1ZM5.9678 5.02393C5.69595 5.04613 5.59517 5.08383 5.54579 5.10899C5.35763 5.20487 5.20487 5.35763 5.109 5.54579C5.08383 5.59517 5.04614 5.69595 5.02393 5.9678C5.00358 6.21702 5.00052 6.53498 5.00007 7H18.9999C18.9995 6.53429 18.9965 6.21614 18.9761 5.96686C18.9539 5.69554 18.9163 5.595 18.8912 5.54579C18.7959 5.35871 18.6427 5.20542 18.4534 5.10899C18.4039 5.08374 18.3032 5.0461 18.0319 5.02392C17.7488 5.00078 17.3768 5 16.8002 5H7.2002C6.62365 5 6.25126 5.00078 5.9678 5.02393ZM19 9H5V16.8002C5 17.3768 5.00078 17.7489 5.02393 18.0322C5.04612 18.3037 5.08378 18.4044 5.109 18.4539C5.20516 18.6426 5.35819 18.7956 5.54579 18.8912C5.595 18.9163 5.69554 18.9539 5.96686 18.9761C6.2498 18.9992 6.62146 19 7.19691 19H16.8031C17.3786 19 17.75 18.9992 18.0327 18.9761C18.3036 18.9539 18.4041 18.9164 18.4534 18.8912C18.6421 18.7951 18.7956 18.6415 18.8912 18.4539C18.9164 18.4046 18.954 18.3041 18.9761 18.0332C18.9992 17.7505 19 17.379 19 16.8036V9ZM7 12C7 11.4477 7.44772 11 8 11H8.002C8.27127 11 8.52916 11.1086 8.71732 11.3012C8.90548 11.4938 9.00802 11.7542 9.00173 12.0234L9.00168 12.0254C8.99548 12.2906 8.88414 12.5425 8.69215 12.7256C8.50016 12.9087 8.24327 13.0081 7.97804 13.0017H7.97608C7.43327 12.9887 7 12.5449 7 12.002V12ZM11 12C11 11.4477 11.4477 11 12 11H12.002C12.2713 11 12.5292 11.1086 12.7173 11.3012C12.9055 11.4938 13.008 11.7542 13.0017 12.0234V12.0254C12.9955 12.2906 12.8841 12.5425 12.6921 12.7256C12.5002 12.9087 12.2433 13.0081 11.978 13.0017H11.9761C11.4333 12.9887 11 12.5449 11 12.002V12ZM15 12C15 11.4477 15.4477 11 16 11H16.002C16.5542 11 17.002 11.4477 17.002 12V12.002C17.002 12.2714 16.8933 12.5293 16.7006 12.7175C16.5078 12.9057 16.2473 13.0082 15.978 13.0017H15.9761C15.4333 12.9887 15 12.5449 15 12.002V12ZM7 16C7 15.4477 7.44772 15 8 15H8.002C8.27127 15 8.52916 15.1086 8.71732 15.3012C8.90548 15.4938 9.00802 15.7542 9.00173 16.0234L9.00168 16.0254C8.99548 16.2906 8.88414 16.5425 8.69215 16.7256C8.50016 16.9087 8.24327 17.0081 7.97804 17.0017H7.97608C7.43327 16.9887 7 16.5449 7 16.002V16ZM11 16C11 15.4477 11.4477 15 12 15H12.002C12.2713 15 12.5292 15.1086 12.7173 15.3012C12.9055 15.4938 13.008 15.7542 13.0017 16.0234V16.0254C12.9955 16.2906 12.8841 16.5425 12.6921 16.7256C12.5002 16.9087 12.2433 17.0081 11.978 17.0017H11.9761C11.4333 16.9887 11 16.5449 11 16.002V16ZM15 16C15 15.4477 15.4477 15 16 15H16.002C16.2713 15 16.5292 15.1086 16.7173 15.3012C16.9055 15.4938 17.008 15.7542 17.0017 16.0234V16.0254C16.9955 16.2906 16.8841 16.5425 16.6921 16.7256C16.5002 16.9087 16.2433 17.0081 15.978 17.0017H15.9761C15.4333 16.9887 15 16.5449 15 16.002V16Z"
                  fill="#57BABC"
                />
              </svg>
              <span style={{ fontSize: "0.8em" }}>
                {selectedDate ? (
                  <>
                    {selectedDate?.weekDay}, {selectedDate?.month}{" "}
                    {selectedDate?.day} / 11:00 - 20:00 Uhr
                  </>
                ) : (
                  ""
                )}
              </span>
            </div>
            {cartItems.map((item, i) => (
              <div className="mobile-table-details" key={i}>
                <p className="col">{item.name} :</p>
                <span className="col text-center">
                  {item.price.toLocaleString("de-DE", {
                    minimumFractionDigits: 2,
                  })}{" "}
                  €
                </span>

                <span className="input-wrapper col">
                  <button
                    id="decrement"
                    onClick={() => {
                      handleDecrement(i);
                    }}
                    disabled={item.orderQty === 0}
                  >
                    -
                  </button>
                  <input type="text" value={item.orderQty} id="m-quantity" />
                  <button
                    id="increment"
                    onClick={() => {
                      handleIncrement(i);
                    }}
                  >
                    +
                  </button>
                </span>
              </div>
            ))}
          </div>
          <div className="mobile-total-box ">
            <p>Gesamtpreis</p>
            <span>
              {getTotalPrice(cartItems)
                .toLocaleString("de-DE", {
                  minimumFractionDigits: 2,
                })
                .replace(".", ",")}{" "}
              €
            </span>
          </div>
        </Modal.Body>
        <Modal.Footer className="d-flex justify-content-center flex-column gap-2 mb-4">
          <button
            className="modal-cart_btn"
            onClick={handleAddToCart}
          >
            <svg
              width="18"
              height="17"
              viewBox="0 0 18 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_527_12738)">
                <path
                  d="M16.6898 3.25798C16.542 3.07063 16.3535 2.91931 16.1387 2.81545C15.9239 2.71159 15.6882 2.65791 15.4496 2.65846H4.7631L4.3629 0.955854C4.33567 0.84011 4.27012 0.736967 4.17689 0.663169C4.08366 0.58937 3.96822 0.549248 3.84932 0.549316H1.74018C1.60033 0.549316 1.46621 0.60487 1.36733 0.703755C1.26844 0.80264 1.21289 0.936757 1.21289 1.0766C1.21289 1.21645 1.26844 1.35056 1.36733 1.44945C1.46621 1.54833 1.60033 1.60389 1.74018 1.60389H3.43171L5.29566 9.52688C4.88917 9.56015 4.51135 9.74956 4.24148 10.0554C3.97161 10.3612 3.83065 10.7596 3.84818 11.1671C3.86571 11.5745 4.04036 11.9594 4.3355 12.2409C4.63064 12.5224 5.02332 12.6786 5.43118 12.6769H14.395C14.5349 12.6769 14.669 12.6213 14.7679 12.5225C14.8668 12.4236 14.9223 12.2894 14.9223 12.1496C14.9223 12.0098 14.8668 11.8756 14.7679 11.7768C14.669 11.6779 14.5349 11.6223 14.395 11.6223H5.43118C5.29133 11.6223 5.15721 11.5668 5.05833 11.4679C4.95944 11.369 4.90389 11.2349 4.90389 11.095C4.90389 10.9552 4.95944 10.8211 5.05833 10.7222C5.15721 10.6233 5.29133 10.5677 5.43118 10.5677H14.3328C14.6896 10.5687 15.0361 10.4485 15.3158 10.227C15.5954 10.0055 15.7917 9.69564 15.8725 9.34813L16.9898 4.60256C17.045 4.37036 17.0466 4.12865 16.9947 3.89572C16.9427 3.66278 16.8384 3.44471 16.6898 3.25798Z"
                  fill="white"
                />
                <path
                  d="M12.8143 16.3681C13.6879 16.3681 14.3961 15.6598 14.3961 14.7862C14.3961 13.9126 13.6879 13.2043 12.8143 13.2043C11.9406 13.2043 11.2324 13.9126 11.2324 14.7862C11.2324 15.6598 11.9406 16.3681 12.8143 16.3681Z"
                  fill="white"
                />
                <path
                  d="M7.01154 16.3681C7.88518 16.3681 8.5934 15.6598 8.5934 14.7862C8.5934 13.9126 7.88518 13.2043 7.01154 13.2043C6.13791 13.2043 5.42969 13.9126 5.42969 14.7862C5.42969 15.6598 6.13791 16.3681 7.01154 16.3681Z"
                  fill="white"
                />
              </g>
              <defs>
                <clipPath id="clip0_527_12738">
                  <rect
                    width="16.8731"
                    height="16.8731"
                    fill="white"
                    transform="translate(0.685547 0.0224609)"
                  />
                </clipPath>
              </defs>
            </svg>
            In den Warenkorb
          </button>
          <button
            onClick={() => navigate("/checkout")}
            className="modal-cart_btn"
            style={{
              background: "white",
              color: "#444790",
              border: "0.80px #444790 solid",
            }}
            disabled={cartEmpty === true}
          >
            Zur Kasse
          </button>
        </Modal.Footer>
      </Modal>
    </>
  );
}
